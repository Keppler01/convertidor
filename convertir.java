/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oswapp;

import javax.swing.JOptionPane;
/**
 *
 * @author lubian
 */
public class Convertir extends javax.swing.JFrame {
    /**
     * Creates new form Convertir
     */
    String concat="";
    int op=0;
    int indicede=0;
    int indicea=0;
    public Convertir() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        valor1 = new javax.swing.JTextField();
        tipodedato = new javax.swing.JComboBox();
        n0 = new javax.swing.JButton();
        punto = new javax.swing.JButton();
        n1 = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        decb = new javax.swing.JComboBox();
        acb = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        n10 = new javax.swing.JButton();
        n11 = new javax.swing.JButton();
        n12 = new javax.swing.JButton();
        n13 = new javax.swing.JButton();
        n14 = new javax.swing.JButton();
        n15 = new javax.swing.JButton();
        n16 = new javax.swing.JButton();
        n17 = new javax.swing.JButton();

        jLabel1.setText("Tipo de Dato a Convertir");

        jLabel2.setText("Convertir A");

        jLabel3.setText("Convertir De");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        valor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valor1ActionPerformed(evt);
            }
        });

        tipodedato.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        tipodedato.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Longitud", "Volumen", "Peso", "Temperatura" }));
        tipodedato.setToolTipText("");
        tipodedato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipodedatoActionPerformed(evt);
            }
        });

        n0.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        n0.setText("0");
        n0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n0ActionPerformed(evt);
            }
        });

        punto.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        punto.setText(".");
        punto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puntoActionPerformed(evt);
            }
        });

        n1.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        n1.setText("1");
        n1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n1ActionPerformed(evt);
            }
        });

        limpiar.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        limpiar.setText("CE");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        decb.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        decb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Milimetros", "Centimetros", "Metros", "Kilometros" }));
        decb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decbActionPerformed(evt);
            }
        });

        acb.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        acb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Milimetros", "Centimetros", "Metros", "Kilometros" }));
        acb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acbActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jButton1.setText("Convertir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jButton2.setText("Salir del convertidor");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Convertidor MKI");

        n10.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        n10.setText("3");
        n10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n10ActionPerformed(evt);
            }
        });

        n11.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        n11.setText("2");
        n11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n11ActionPerformed(evt);
            }
        });

        n12.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        n12.setText("4");
        n12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n12ActionPerformed(evt);
            }
        });

        n13.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        n13.setText("5");
        n13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n13ActionPerformed(evt);
            }
        });

        n14.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        n14.setText("6");
        n14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n14ActionPerformed(evt);
            }
        });

        n15.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        n15.setText("7");
        n15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n15ActionPerformed(evt);
            }
        });

        n16.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        n16.setText("8");
        n16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n16ActionPerformed(evt);
            }
        });

        n17.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        n17.setText("9");
        n17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(n12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(n13, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(n14, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(n1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(n11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(n10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(limpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(n15, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(n16, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                    .addComponent(punto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(n17, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(n0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tipodedato, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(decb, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(acb, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(valor1)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valor1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tipodedato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(decb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(n12, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(n14, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(n13, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(n1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(n10, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(n11, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(n15, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(n17, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(n16, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(punto, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(n0, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(acb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void tipodedatoActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        if(tipodedato.getSelectedItem()=="Longitud")
        {
            op=0;
            decb.removeAllItems();
            acb.removeAllItems();
            
            decb.addItem("Milimetros");
            decb.addItem("Centimetros");
            decb.addItem("Metros");
            decb.addItem("Kilometros");
            
            acb.addItem("Milimetros");
            acb.addItem("Centimetros");
            acb.addItem("Metros");
            acb.addItem("Kilometros");
            
        }
        if(tipodedato.getSelectedItem()=="Volumen")
        {
            op=1;
            decb.removeAllItems();
            acb.removeAllItems();
            
            decb.addItem("Mililitros");
            decb.addItem("Litros");
            decb.addItem("Galones");
            
            
            acb.addItem("Mililitros");
            acb.addItem("Litros");
            acb.addItem("Galones");
            
        }
        if(tipodedato.getSelectedItem()=="Peso")
        {
            op=2;
            decb.removeAllItems();
            acb.removeAllItems();
            
            decb.addItem("Gramos");
            decb.addItem("Kilogramos");
            decb.addItem("Onzas");
            decb.addItem("Libras");
            
            acb.addItem("Gramos");
            acb.addItem("Kilogramos");
            acb.addItem("Onzas");
            acb.addItem("Libras");
            
        }
        if(tipodedato.getSelectedItem()=="Temperatura")
        {
            op=3;
            decb.removeAllItems();
            acb.removeAllItems();
            
            decb.addItem("Farenheit");
            decb.addItem("Celsius");
                        
            acb.addItem("Farenheit");
            acb.addItem("Celsius");

            
        }
        
    }                                          

    private void n0ActionPerformed(java.awt.event.ActionEvent evt) {                                   
       // TODO add your handling code here:
         valor1.setText(valor1.getText()+"0");
    }                                  

    private void puntoActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        concat=concat+".";
        valor1.setText(concat);       
    }                                     

    private void n1ActionPerformed(java.awt.event.ActionEvent evt) {                                   
       // TODO add your handling code here:
        valor1.setText(valor1.getText()+"1");
    }                                  

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {                                        
       // TODO add your handling code here:
        valor1.setText("");
    }                                       

    private void valor1ActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void decbActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void acbActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
    }                                   

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
        double valor=Double.parseDouble(valor1.getText());
        concat="";
        switch(op){
            case 0://Longitud
                if(decb.getSelectedItem()=="Milimetros"){
                indicede=0;}
                if(acb.getSelectedItem()=="Milimetros"){
                indicea=0;}
                
                if(decb.getSelectedItem()=="Centimetros"){
                indicede=1;}
                if(acb.getSelectedItem()=="Centimetros"){
                indicea=1;}
                
                if(decb.getSelectedItem()=="Metros"){
                indicede=2;}
                if(acb.getSelectedItem()=="Metros"){
                indicea=2;}
                
                if(decb.getSelectedItem()=="Kilometros"){
                indicede=3;}
                if(acb.getSelectedItem()=="Kilometros"){
                indicea=3;}
                
                switch(indicede){
                    case 0: 
                        switch(indicea)
                        {
                            case 1:
                                valor1.setText(""+valor/10);
                                break;
                            case 2: 
                                valor1.setText(""+valor/1000);
                                break;
                            case 3:
                                valor1.setText(""+valor/1000000);
                                break;    
                        }
                        break;
                    case 1: 
                        switch(indicea)
                        {
                            case 0:
                                valor1.setText(""+valor*10);
                                break;
                            case 2: 
                                valor1.setText(""+valor/100);
                                break;
                            case 3: 
                                valor1.setText(""+valor/100000);
                                break;    
                        }
                        break;
                    case 2:
                        switch(indicea)
                        {
                            case 0:
                                valor1.setText(""+valor*1000);
                                break;
                            case 1:
                                valor1.setText(""+valor*100);
                                break;
                            case 3:
                                valor1.setText(""+valor/1000);
                                break;    
                        }
                        break;
                    case 3:
                        switch(indicea)
                        {
                            case 0: 
                                valor1.setText(""+valor*1000);
                                break;
                            case 1: 
                                valor1.setText(""+valor*100);
                                break;
                            case 2: 
                                valor1.setText(""+valor/1000);
                                break;    
                        }
                        break;
                }
                break;
            case 1://Volumen
                if(decb.getSelectedItem()=="Mililitros"){
                indicede=0;}
                if(acb.getSelectedItem()=="Mililitros"){
                indicea=0;}
                
                if(decb.getSelectedItem()=="Litros"){
                indicede=1;}
                if(acb.getSelectedItem()=="Litros"){
                indicea=1;}
                
                if(decb.getSelectedItem()=="Galones"){
                indicede=2;}
                if(acb.getSelectedItem()=="Galones"){
                indicea=2;}
                
                
                switch(indicede){
                    case 0: 
                        switch(indicea)
                        {
                            case 1:
                                valor1.setText(""+valor/1000);
                                break;
                            case 2: 
                                valor1.setText(""+valor*(0.2641/1000));
                                break;
                            
                        }
                        break;
                    case 1: 
                        switch(indicea)
                        {
                            case 0: 
                                valor1.setText(""+valor*1000);
                                break;
                            case 2: 
                                valor1.setText(""+valor*0.2641);
                                break;
                            
                        }
                        break;
                    case 2:
                        switch(indicea)
                        {
                            case 0:
                                valor1.setText(""+valor*(1000*3.7834));
                                break;
                            case 1:
                                valor1.setText(""+valor*3.7834);
                                break;
                          
                        }
                        break;
                }
                break;
                
            case 2://Masa
                if(decb.getSelectedItem()=="Gramos"){
                indicede=0;}
                if(acb.getSelectedItem()=="Gramos"){
                indicea=0;}
                
                if(decb.getSelectedItem()=="Kilogramos"){
                indicede=1;}
                if(acb.getSelectedItem()=="Kilogramos"){
                indicea=1;}
                
                if(decb.getSelectedItem()=="Onzas"){
                indicede=2;}
                if(acb.getSelectedItem()=="Onzas"){
                indicea=2;}
                
                if(decb.getSelectedItem()=="Libras"){
                indicede=3;}
                if(acb.getSelectedItem()=="Libras"){
                indicea=3;}
                    
                switch(indicede){
                    case 0: 
                        switch(indicea)
                        {
                            case 1:
                                valor1.setText(""+valor/1000);
                                break;
                            case 2:
                                valor1.setText(""+valor*0.03527);
                                break;
                            case 3:
                                valor1.setText(""+valor*(16*0.03527));
                                break;    
                        }
                        break;
                    case 1: 
                        switch(indicea)
                        {
                            case 0: 
                                valor1.setText(""+valor*1000);
                                break;
                            case 2:
                                valor1.setText(""+valor*(1000*0.03527));
                                break;
                            case 3: 
                                valor1.setText(""+valor*(2.2));
                                break;    
                        }
                        break;
                    case 2:
                        switch(indicea)
                        {
                            case 0: 
                                valor1.setText(""+valor/0.03527);
                                break;
                            case 1: 
                                valor1.setText(""+(valor/0.03257)*1000);
                                break;
                            case 3: 
                                valor1.setText(""+valor/16);
                                break;    
                        }
                        break;
                    case 3:
                        switch(indicea)
                        {
                            case 0: 
                                valor1.setText(""+valor*(16/0.03527));
                                break;
                            case 1: 
                                valor1.setText(""+valor*0.4535);
                                break;
                            case 2: 
                                valor1.setText(""+valor*16);
                                break;    
                        }
                        break;
                }
            
            
            break;
            
            case 3:
                if(decb.getSelectedItem()=="Farenheit"){
                indicede=0;}
                if(acb.getSelectedItem()=="Farenheit"){
                indicea=0;}
                
                if(decb.getSelectedItem()=="Celsius"){
                indicede=1;}
                if(acb.getSelectedItem()=="Celsius"){
                indicea=1;}
                
                
                    
                switch(indicede){
                    case 0: 
                        switch(indicea)
                        {
                            case 1: 
                                valor1.setText(""+((valor-32))/1.8);
                                break;
                            
                        }
                        break;
                    case 1: 
                        switch(indicea)
                        {
                            case 0: 
                                valor1.setText(""+(valor*1.8+32));
                                break;
                        }
                        break;
                }

                break;
        }        // TODO add your handling code here:
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
         this.setVisible(false);
    }                                        

    private void n10ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
        
          valor1.setText(valor1.getText()+"3");
    }                                   

    private void n11ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
        
          valor1.setText(valor1.getText()+"2");
    }                                   

    private void n12ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
          valor1.setText(valor1.getText()+"4");
        
    }                                   

    private void n13ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
          valor1.setText(valor1.getText()+"5");
        
    }                                   

    private void n14ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
        
          valor1.setText(valor1.getText()+"6");
    }                                   

    private void n15ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
          valor1.setText(valor1.getText()+"7");
        
    }                                   

    private void n16ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
          valor1.setText(valor1.getText()+"8");
        
    }                                   

    private void n17ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
          valor1.setText(valor1.getText()+"9");
        
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Convertir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Convertir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Convertir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Convertir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Convertir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox acb;
    private javax.swing.JComboBox decb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton limpiar;
    private javax.swing.JButton n0;
    private javax.swing.JButton n1;
    private javax.swing.JButton n10;
    private javax.swing.JButton n11;
    private javax.swing.JButton n12;
    private javax.swing.JButton n13;
    private javax.swing.JButton n14;
    private javax.swing.JButton n15;
    private javax.swing.JButton n16;
    private javax.swing.JButton n17;
    private javax.swing.JButton punto;
    private javax.swing.JComboBox tipodedato;
    private javax.swing.JTextField valor1;
    // End of variables declaration                   
}
